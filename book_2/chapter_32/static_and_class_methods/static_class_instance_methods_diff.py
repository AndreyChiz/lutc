"""Сравнение методов экземпляра, статических и методов класса"""


class Methods:
    s = 6

    def my_instance_method(self, x):
        """метод экземпляра

        - вызывается с объектом экземпляра при этом
            экземпляр автоматически передается в self

        - при вызове через класс экземпляр передается
            вручную
        """
        print([self, x])

    def my_static_method(x):
        print([x])

    def my_class_method(cls, x):
        print([cls, x])

    # Делает my_static_method статическим методов (или @: впереди)
    my_static_method = staticmethod(my_static_method)

    # Делает my_class_method методом класса (или @ впереди)
    my_class_method = classmethod(my_class_method)

    # Можно оставить статический метод без указания staticmethod
    # если планируется вызываетьь его только на классе


my_instance = Methods()

# Метод экземпляра #####################################
# вызов через экземпляр
# my_instance автоматически подставилось в первый аргумент (self)
my_instance.my_instance_method(1)

# Вызов через класс
# my_instance вручную прередаем в первый аргумент (self)
Methods.my_instance_method(my_instance, 2)
#######################################################

# Статический метод #####################################
# Вызов через класс
# Экземпляр не передается и не ожидается
Methods.my_static_method(3)  # будет работать без декоратора

# Вызов через экземпляр
# не будет работать если не указать что статический
my_instance.my_static_method(4)
#######################################################

# Метод класса

# Вызов через класс
# в первый аргумент cls автоматически передается класс
Methods.my_class_method(5)

# Вызов через экземппляр
# Аналогично в первый аргумент cls автоматически передается класс
my_instance.my_class_method(6)


#
